server {
    listen 80;
    server_name _;
    
    # Отключаем абсолютные редиректы (сохраняем порт)
    absolute_redirect off;
    
    # Включаем порт в редиректах
    port_in_redirect on;
    
    # Используем имя сервера в редиректах
    server_name_in_redirect on;
    
    # Отключаем слияние слешей для нормализации URL
    merge_slashes off;
    
    # Корневая директория для статических файлов
    root /usr/share/nginx/html;
    index index.html;

    # Включение отладочных логов
    error_log /var/log/nginx/error.log debug;
    
    # Конфигурация для SPA (Single Page Application)
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Обработка API запросов
    
    # Специальная обработка для запросов авторизации БЕЗ слеша на конце
    location = /api/v1/login/access-token {
        # Разрешаем только POST и OPTIONS запросы
        limit_except POST OPTIONS {
            deny all;
        }
        
        # Обработка CORS для preflight запросов
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Прямое проксирование на бэкенд без редиректа
        proxy_pass http://backend:8000/api/v1/login/access-token;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_redirect off;
        proxy_buffering off;
    }
    
    # Специальная обработка для запросов авторизации СО слешем на конце
    location = /api/v1/login/access-token/ {
        # Разрешаем только POST и OPTIONS запросы
        limit_except POST OPTIONS {
            deny all;
        }
        
        # Обработка CORS для preflight запросов
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Прямое проксирование на бэкенд со слешем
        proxy_pass http://backend:8000/api/v1/login/access-token/;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_redirect off;
        proxy_buffering off;
    }

    # Обработка других URL без слеша в конце - без редиректа
    location ~ ^/api/v1/(players|funds|cases|users)$ {
        # Изменяем URL для проксирования, добавляя слеш
        rewrite ^(/api/v1/(?:players|funds|cases|users))$ $1/ break;
        proxy_pass http://backend:8000;
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header Origin $http_origin;
        proxy_redirect off;
        proxy_buffering off;
    }

    # Общая обработка API запросов
    location /api/ {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_redirect off;
        proxy_buffering off;
    }

    # Настройка кэширования для статических файлов
    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Отключаем логирование запросов к файлам favicon и robots.txt
    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }
    
    # Обработка ошибок
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
} 